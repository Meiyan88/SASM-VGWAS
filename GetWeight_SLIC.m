% consider spatial, content, and anatomical information among voxels
% calculate similarities between current voxel and voxels in the same
% anatomical region (obtained by using modified SLIC method)
% input:
%          index is a V*1 vector, which is the index of voxels in an image
%          IDnum is a n*1 vector, which is ID number of subjects
%          sizeimg is image size
%          mainfile is file path name of images
%          SLIC_img is cluster image generated by modified SLIC method
% output
%          omega is a cell, which is the weights of neiborhoods for each
%          voxel
%          YW is a n*V matrix, which is the voxel intensity with weighting


function [omega,YW]=GetWeight_SLIC(index,IDnum,sizeimg,mainfile,SLIC_img,omega)

if nargin<6
    omega=cell(length(index),1);
    flag=1;
else
    flag=0;
end

Y=zeros(length(IDnum),length(index));
YW=zeros(size(Y));
LL=SLIC_img(index);

h=4;
[x,y,z]=ind2sub(sizeimg,index);
curidx=[x(:),y(:),z(:)];
for l=1:length(index)   
    Nidx=find(SLIC_img(:)==LL(l));
    Nidx(Nidx(:)==index(l))=[];%index of neighborhood of a voxel
    [~,~,iidx]=intersect(Nidx,index);
    if flag
        [nx,ny,nz]=ind2sub(sizeimg,Nidx);
        nbidx=[nx,ny,nz];
        d=repmat(curidx(l,:),length(Nidx),1)-nbidx;%N*3
        u=sqrt(d(:,1).^2+d(:,2).^2+d(:,3).^2);%distance between neighbor voxels and current voxel
        w1=exp(-u/h);%N*1
    end
    if l==1
        for j=1:length(IDnum)
            nii=load_nii([mainfile,'/',num2str(IDnum(j)),'-01']);
            Y(j,:)=nii.img(index);
        end
    end
    YN=Y(:,iidx);
    if flag
        d=repmat(Y(:,l),1,size(YN,2))-YN;%n*N
        temp=var(d,0,1);
        temp(temp(:)==0)=eps;
        di=d./repmat(sqrt(temp),[size(Y,1),1]);%n*N
        u=median(di,1).^2;%1*N
        u=u(:);
        w2=exp(-u/2);
        w2(w2<=0|w2>=20)=0;
        temp=w1.*w2;%N*1
        omega{l}=temp/sum(temp);
    end
    YW(:,l)=YN*omega{l};
    if ~mod(l,1000)
        fprintf('Finished voxels: %d\n',l)
    end
end